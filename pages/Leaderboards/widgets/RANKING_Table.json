{
  "accentColor": "{{appsmith.theme.colors.primaryColor}}",
  "animateLoading": true,
  "borderColor": "#E0DEDE",
  "borderRadius": "0px",
  "borderWidth": "1",
  "bottomRow": 203,
  "boxShadow": "{{appsmith.theme.boxShadow.appBoxShadow}}",
  "cachedTableData": {},
  "canFreezeColumn": true,
  "cellBackground": "",
  "childStylesheet": {
    "button": {
      "borderRadius": "{{appsmith.theme.borderRadius.appBorderRadius}}",
      "boxShadow": "none",
      "buttonColor": "{{appsmith.theme.colors.primaryColor}}"
    },
    "editActions": {
      "discardBorderRadius": "{{appsmith.theme.borderRadius.appBorderRadius}}",
      "discardButtonColor": "{{appsmith.theme.colors.primaryColor}}",
      "saveBorderRadius": "{{appsmith.theme.borderRadius.appBorderRadius}}",
      "saveButtonColor": "{{appsmith.theme.colors.primaryColor}}"
    },
    "iconButton": {
      "borderRadius": "{{appsmith.theme.borderRadius.appBorderRadius}}",
      "boxShadow": "none",
      "buttonColor": "{{appsmith.theme.colors.primaryColor}}"
    },
    "menuButton": {
      "borderRadius": "{{appsmith.theme.borderRadius.appBorderRadius}}",
      "boxShadow": "none",
      "menuColor": "{{appsmith.theme.colors.primaryColor}}"
    }
  },
  "columnOrder": [
    "customColumn1",
    "Logo",
    "Abbreviation",
    "customColumn2",
    "customColumn3",
    "Points",
    "ID",
    "Color",
    "EmailAssociation",
    "Banner",
    "Facebook",
    "Instagram",
    "JoinMembership",
    "Password",
    "rowIndex",
    "Name",
    "LinkedIn",
    "Mission"
  ],
  "columnUpdatedAt": 1745440701845,
  "columnWidthMap": {},
  "compactMode": "DEFAULT",
  "customIsLoading": false,
  "customIsLoadingValue": "",
  "defaultPageSize": 0,
  "defaultSelectedRowIndex": "0",
  "defaultSelectedRowIndices": [
    0
  ],
  "delimiter": ",",
  "dynamicBindingPathList": [
    {
      "key": "accentColor"
    },
    {
      "key": "boxShadow"
    },
    {
      "key": "tableData"
    },
    {
      "key": "primaryColumns.ID.computedValue"
    },
    {
      "key": "primaryColumns.Abbreviation.computedValue"
    },
    {
      "key": "primaryColumns.Color.computedValue"
    },
    {
      "key": "primaryColumns.EmailAssociation.computedValue"
    },
    {
      "key": "primaryColumns.Logo.computedValue"
    },
    {
      "key": "primaryColumns.Banner.computedValue"
    },
    {
      "key": "primaryColumns.Facebook.computedValue"
    },
    {
      "key": "primaryColumns.Instagram.computedValue"
    },
    {
      "key": "primaryColumns.JoinMembership.computedValue"
    },
    {
      "key": "primaryColumns.Password.computedValue"
    },
    {
      "key": "primaryColumns.rowIndex.computedValue"
    },
    {
      "key": "primaryColumns.customColumn1.computedValue"
    },
    {
      "key": "primaryColumns.customColumn2.computedValue"
    },
    {
      "key": "primaryColumns.customColumn3.computedValue"
    },
    {
      "key": "primaryColumns.customColumn1.cellBackground"
    },
    {
      "key": "primaryColumns.Logo.cellBackground"
    },
    {
      "key": "primaryColumns.Abbreviation.cellBackground"
    },
    {
      "key": "primaryColumns.customColumn2.cellBackground"
    },
    {
      "key": "primaryColumns.customColumn3.cellBackground"
    },
    {
      "key": "primaryColumns.Name.computedValue"
    },
    {
      "key": "primaryColumns.LinkedIn.computedValue"
    },
    {
      "key": "primaryColumns.Points.computedValue"
    },
    {
      "key": "primaryColumns.Points.cellBackground"
    },
    {
      "key": "primaryColumns.Mission.computedValue"
    }
  ],
  "dynamicPropertyPathList": [
    {
      "key": "tableData"
    },
    {
      "key": "cellBackground"
    },
    {
      "key": "primaryColumns.customColumn1.cellBackground"
    },
    {
      "key": "primaryColumns.Logo.cellBackground"
    },
    {
      "key": "primaryColumns.Color.cellBackground"
    },
    {
      "key": "primaryColumns.Abbreviation.cellBackground"
    },
    {
      "key": "primaryColumns.customColumn2.cellBackground"
    },
    {
      "key": "primaryColumns.customColumn3.cellBackground"
    },
    {
      "key": "primaryColumns.Points.cellBackground"
    }
  ],
  "dynamicTriggerPathList": [
    {
      "key": "onSort"
    }
  ],
  "enableClientSideSearch": true,
  "endOfData": false,
  "flexVerticalAlignment": "start",
  "horizontalAlignment": "CENTER",
  "inlineEditingSaveOption": "ROW_LEVEL",
  "isLoading": false,
  "isSortable": true,
  "isVisible": true,
  "isVisibleDownload": true,
  "isVisibleFilters": true,
  "isVisiblePagination": false,
  "isVisibleSearch": true,
  "key": "06xeaua8n3",
  "label": "Data",
  "leftColumn": 0,
  "minWidth": 450,
  "mobileBottomRow": 130,
  "mobileLeftColumn": 17,
  "mobileRightColumn": 51,
  "mobileTopRow": 102,
  "needsErrorInfo": false,
  "onSort": "",
  "parentColumnSpace": 21.421875,
  "parentId": "0",
  "parentRowSpace": 10,
  "primaryColumnId": "customColumn4",
  "primaryColumns": {
    "Abbreviation": {
      "alias": "Abbreviation",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "{{(() => { const tableData = RANKING_Table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => (currentRow[\"Color\"])) : currentRow[\"Color\"] })()}}",
      "columnType": "text",
      "computedValue": "{{(() => { const tableData = RANKING_Table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => ( currentRow[\"Abbreviation\"])) :  currentRow[\"Abbreviation\"] })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "horizontalAlignment": "CENTER",
      "id": "Abbreviation",
      "index": 1,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": true,
      "label": "Abbreviation",
      "notation": "standard",
      "originalId": "Abbreviation",
      "sticky": "",
      "textColor": "#ffffff",
      "textSize": "1.25rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "Banner": {
      "alias": "Banner",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "",
      "columnType": "text",
      "computedValue": "{{(() => { const tableData = RANKING_Table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => ( currentRow[\"Banner\"])) :  currentRow[\"Banner\"] })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "horizontalAlignment": "CENTER",
      "id": "Banner",
      "index": 11,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": false,
      "label": "Banner",
      "notation": "standard",
      "originalId": "Banner",
      "sticky": "",
      "textColor": "#ffffff",
      "textSize": "1.25rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "Color": {
      "alias": "Color",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "",
      "columnType": "text",
      "computedValue": "{{(() => { const tableData = RANKING_Table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => ( currentRow[\"Color\"])) :  currentRow[\"Color\"] })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "horizontalAlignment": "CENTER",
      "id": "Color",
      "index": 2,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": false,
      "label": "Color",
      "notation": "standard",
      "originalId": "Color",
      "sticky": "",
      "textColor": "#ffffff",
      "textSize": "1.25rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "EmailAssociation": {
      "alias": "EmailAssociation",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "",
      "columnType": "text",
      "computedValue": "{{(() => { const tableData = RANKING_Table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => ( currentRow[\"EmailAssociation\"])) :  currentRow[\"EmailAssociation\"] })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "horizontalAlignment": "CENTER",
      "id": "EmailAssociation",
      "index": 9,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": false,
      "label": "EmailAssociation",
      "notation": "standard",
      "originalId": "EmailAssociation",
      "sticky": "",
      "textColor": "#ffffff",
      "textSize": "1.25rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "Facebook": {
      "alias": "Facebook",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "",
      "columnType": "text",
      "computedValue": "{{(() => { const tableData = RANKING_Table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => ( currentRow[\"Facebook\"])) :  currentRow[\"Facebook\"] })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "horizontalAlignment": "CENTER",
      "id": "Facebook",
      "index": 12,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": false,
      "label": "Facebook",
      "notation": "standard",
      "originalId": "Facebook",
      "sticky": "",
      "textColor": "#ffffff",
      "textSize": "1.25rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "ID": {
      "alias": "ID",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "",
      "columnType": "number",
      "computedValue": "{{(() => { const tableData = RANKING_Table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => ( currentRow[\"ID\"])) :  currentRow[\"ID\"] })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "horizontalAlignment": "CENTER",
      "id": "ID",
      "index": 0,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": false,
      "label": "ID",
      "notation": "standard",
      "originalId": "ID",
      "sticky": "",
      "textColor": "#ffffff",
      "textSize": "1.25rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "Instagram": {
      "alias": "Instagram",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "",
      "columnType": "text",
      "computedValue": "{{(() => { const tableData = RANKING_Table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => ( currentRow[\"Instagram\"])) :  currentRow[\"Instagram\"] })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "horizontalAlignment": "CENTER",
      "id": "Instagram",
      "index": 14,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": false,
      "label": "Instagram",
      "notation": "standard",
      "originalId": "Instagram",
      "sticky": "",
      "textColor": "#ffffff",
      "textSize": "1.25rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "JoinMembership": {
      "alias": "JoinMembership",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "",
      "columnType": "text",
      "computedValue": "{{(() => { const tableData = RANKING_Table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => ( currentRow[\"JoinMembership\"])) :  currentRow[\"JoinMembership\"] })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "horizontalAlignment": "CENTER",
      "id": "JoinMembership",
      "index": 17,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": false,
      "label": "JoinMembership",
      "notation": "standard",
      "originalId": "JoinMembership",
      "sticky": "",
      "textColor": "#ffffff",
      "textSize": "1.25rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "LinkedIn": {
      "alias": "LinkedIn",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "",
      "columnType": "text",
      "computedValue": "{{(() => { const tableData = RANKING_Table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => ( currentRow[\"LinkedIn\"])) :  currentRow[\"LinkedIn\"] })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "",
      "horizontalAlignment": "CENTER",
      "id": "LinkedIn",
      "index": 14,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": false,
      "label": "LinkedIn",
      "notation": "standard",
      "originalId": "LinkedIn",
      "sticky": "",
      "textColor": "#ffffff",
      "textSize": "1.25rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "Logo": {
      "alias": "Logo",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "{{(() => { const tableData = RANKING_Table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => (currentRow[\"Color\"])) : currentRow[\"Color\"] })()}}",
      "columnType": "html",
      "computedValue": "{{(() => { const tableData = RANKING_Table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => ('<img src=\"' + currentRow[\"Logo\"] + '\"  width=\"100\" height=\"100\"/>')) : '<img src=\"' + currentRow[\"Logo\"] + '\"  width=\"100\" height=\"100\"/>' })()}}",
      "currencyCode": "USD",
      "customAlias": "",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "horizontalAlignment": "CENTER",
      "id": "Logo",
      "imageSize": "LARGE",
      "index": 10,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": true,
      "label": "Logo",
      "notation": "standard",
      "originalId": "Logo",
      "sticky": "",
      "textColor": "#ffffff",
      "textSize": "1.25rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "Mission": {
      "alias": "Mission",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "",
      "columnType": "text",
      "computedValue": "{{(() => { const tableData = RANKING_Table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => ( currentRow[\"Mission\"])) :  currentRow[\"Mission\"] })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "",
      "horizontalAlignment": "CENTER",
      "id": "Mission",
      "index": 5,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": false,
      "label": "Mission",
      "notation": "standard",
      "originalId": "Mission",
      "sticky": "",
      "textColor": "#ffffff",
      "textSize": "1.25rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "Name": {
      "alias": "Name",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "",
      "columnType": "text",
      "computedValue": "{{(() => { const tableData = RANKING_Table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => ( currentRow[\"Name\"])) :  currentRow[\"Name\"] })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "",
      "horizontalAlignment": "CENTER",
      "id": "Name",
      "index": 3,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": false,
      "label": "Name",
      "notation": "standard",
      "originalId": "Name",
      "sticky": "",
      "textColor": "#ffffff",
      "textSize": "1.25rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "Password": {
      "alias": "Password",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "",
      "columnType": "text",
      "computedValue": "{{(() => { const tableData = RANKING_Table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => ( currentRow[\"Password\"])) :  currentRow[\"Password\"] })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "horizontalAlignment": "CENTER",
      "id": "Password",
      "index": 20,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": false,
      "label": "Password",
      "notation": "standard",
      "originalId": "Password",
      "sticky": "",
      "textColor": "#ffffff",
      "textSize": "1.25rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "Points": {
      "alias": "Points",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "{{(() => { const tableData = RANKING_Table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => (currentRow[\"Color\"])) : currentRow[\"Color\"] })()}}",
      "columnType": "number",
      "computedValue": "{{(() => { const tableData = RANKING_Table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => ( currentRow[\"Points\"])) :  currentRow[\"Points\"] })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "",
      "horizontalAlignment": "CENTER",
      "id": "Points",
      "index": 21,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": true,
      "label": "Points",
      "notation": "standard",
      "originalId": "Points",
      "sticky": "",
      "textColor": "#ffffff",
      "textSize": "1.25rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "customColumn1": {
      "alias": "Posición",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "buttonStyle": "rgb(3, 179, 101)",
      "cellBackground": "{{(() => { const tableData = RANKING_Table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => (currentRow[\"Color\"])) : currentRow[\"Color\"] })()}}",
      "columnType": "text",
      "computedValue": "{{(() => { const tableData = RANKING_Table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => (\n(() => {\n  const allAssociations = GetAssociationsInfo.data || [];\n  const allEvents = GetEvents.data || [];\n\n  // Step 1: Compute points\n  const ranked = allAssociations.map(assoc => {\n    const events = allEvents.filter(e => e.AssociationsID === assoc.ID);\n    const activities = events.length;\n    const participation = events.reduce((acc, e) => acc + Number(e.Participants || 0), 0);\n    const points = (activities * 0.75) + (participation * 0.25);\n    return { id: assoc.ID, points };\n  });\n\n  // Step 2: Sort by points descending\n  const sortedNonZero = ranked.filter(r => r.points > 0).sort((a, b) => b.points - a.points);\n  const sortedZero = ranked.filter(r => r.points === 0);\n  const finalRanked = [...sortedNonZero, ...sortedZero];\n\n  // Step 3: Assign positions (tie = same position, next is +1 from previous, no skipping)\n  const positions = [];\n  let position = 1;\n\n  for (let i = 0; i < finalRanked.length; i++) {\n    if (i > 0 && finalRanked[i].points === finalRanked[i - 1].points) {\n      positions.push(position); // same position as previous\n    } else {\n      position = positions.length === 0 ? 1 : Math.max(...positions) + 1;\n      positions.push(position);\n    }\n  }\n\n  // Step 4: Get position for current row\n  const index = finalRanked.findIndex(r => r.id === currentRow.ID);\n  const finalPos = positions[index];\n\n  // Step 5: Return medal or ordinal\n  const suffix = (n) => {\n    if (n % 100 >= 11 && n % 100 <= 13) return \"th\";\n    switch (n % 10) {\n      case 1: return \"st\";\n      case 2: return \"nd\";\n      case 3: return \"rd\";\n      default: return \"th\";\n    }\n  };\n\n  if (finalPos === 1) return \"1st 🥇\";\n  if (finalPos === 2) return \"2nd 🥈\";\n  if (finalPos === 3) return \"3rd 🥉\";\n  return finalPos ? `${finalPos}${suffix(finalPos)}` : \"–\";\n})()\n)) : \n(() => {\n  const allAssociations = GetAssociationsInfo.data || [];\n  const allEvents = GetEvents.data || [];\n\n  // Step 1: Compute points\n  const ranked = allAssociations.map(assoc => {\n    const events = allEvents.filter(e => e.AssociationsID === assoc.ID);\n    const activities = events.length;\n    const participation = events.reduce((acc, e) => acc + Number(e.Participants || 0), 0);\n    const points = (activities * 0.75) + (participation * 0.25);\n    return { id: assoc.ID, points };\n  });\n\n  // Step 2: Sort by points descending\n  const sortedNonZero = ranked.filter(r => r.points > 0).sort((a, b) => b.points - a.points);\n  const sortedZero = ranked.filter(r => r.points === 0);\n  const finalRanked = [...sortedNonZero, ...sortedZero];\n\n  // Step 3: Assign positions (tie = same position, next is +1 from previous, no skipping)\n  const positions = [];\n  let position = 1;\n\n  for (let i = 0; i < finalRanked.length; i++) {\n    if (i > 0 && finalRanked[i].points === finalRanked[i - 1].points) {\n      positions.push(position); // same position as previous\n    } else {\n      position = positions.length === 0 ? 1 : Math.max(...positions) + 1;\n      positions.push(position);\n    }\n  }\n\n  // Step 4: Get position for current row\n  const index = finalRanked.findIndex(r => r.id === currentRow.ID);\n  const finalPos = positions[index];\n\n  // Step 5: Return medal or ordinal\n  const suffix = (n) => {\n    if (n % 100 >= 11 && n % 100 <= 13) return \"th\";\n    switch (n % 10) {\n      case 1: return \"st\";\n      case 2: return \"nd\";\n      case 3: return \"rd\";\n      default: return \"th\";\n    }\n  };\n\n  if (finalPos === 1) return \"1st 🥇\";\n  if (finalPos === 2) return \"2nd 🥈\";\n  if (finalPos === 3) return \"3rd 🥉\";\n  return finalPos ? `${finalPos}${suffix(finalPos)}` : \"–\";\n})()\n })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "BOLD",
      "horizontalAlignment": "CENTER",
      "id": "customColumn1",
      "index": 10,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": true,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": true,
      "label": "Position",
      "labelColor": "#FFFFFF",
      "notation": "standard",
      "originalId": "customColumn1",
      "sticky": "",
      "textColor": "#ffffff",
      "textSize": "1.25rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "customColumn2": {
      "alias": "Actividades",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "buttonStyle": "rgb(3, 179, 101)",
      "cellBackground": "{{(() => { const tableData = RANKING_Table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => (currentRow[\"Color\"])) : currentRow[\"Color\"] })()}}",
      "columnType": "text",
      "computedValue": "{{(() => { const tableData = RANKING_Table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => ( \n  GetEvents.data \n    ? GetEvents.data.filter(event => event.AssociationsID === currentRow.ID).length \n    : 0 \n)) :  \n  GetEvents.data \n    ? GetEvents.data.filter(event => event.AssociationsID === currentRow.ID).length \n    : 0 \n })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "",
      "horizontalAlignment": "CENTER",
      "id": "customColumn2",
      "index": 10,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": true,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": true,
      "label": "Activities",
      "labelColor": "#FFFFFF",
      "notation": "standard",
      "originalId": "customColumn2",
      "sticky": "",
      "textColor": "#ffffff",
      "textSize": "1.25rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "customColumn3": {
      "alias": "Participación",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "buttonStyle": "rgb(3, 179, 101)",
      "cellBackground": "{{(() => { const tableData = RANKING_Table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => (currentRow[\"Color\"])) : currentRow[\"Color\"] })()}}",
      "columnType": "text",
      "computedValue": "{{(() => { const tableData = RANKING_Table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => ( \n  GetEvents.data\n    ? GetEvents.data\n        .filter(event => event.AssociationsID === currentRow.ID)\n        .reduce((acc, event) => acc + Number(event.Participants), 0)\n    : 0\n)) :  \n  GetEvents.data\n    ? GetEvents.data\n        .filter(event => event.AssociationsID === currentRow.ID)\n        .reduce((acc, event) => acc + Number(event.Participants), 0)\n    : 0\n })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "fontStyle": "",
      "horizontalAlignment": "CENTER",
      "id": "customColumn3",
      "index": 10,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": true,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": true,
      "label": "Participation",
      "labelColor": "#FFFFFF",
      "notation": "standard",
      "originalId": "customColumn3",
      "sticky": "",
      "textColor": "#ffffff",
      "textSize": "1.25rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    },
    "rowIndex": {
      "alias": "rowIndex",
      "allowCellWrapping": false,
      "allowSameOptionsInNewRow": true,
      "cellBackground": "",
      "columnType": "number",
      "computedValue": "{{(() => { const tableData = RANKING_Table.processedTableData || []; return tableData.length > 0 ? tableData.map((currentRow, currentIndex) => ( currentRow[\"rowIndex\"])) :  currentRow[\"rowIndex\"] })()}}",
      "currencyCode": "USD",
      "decimals": 0,
      "enableFilter": true,
      "enableSort": true,
      "horizontalAlignment": "CENTER",
      "id": "rowIndex",
      "index": 21,
      "isCellEditable": false,
      "isCellVisible": true,
      "isDerived": false,
      "isDisabled": false,
      "isDiscardVisible": true,
      "isEditable": false,
      "isSaveVisible": true,
      "isVisible": false,
      "label": "rowIndex",
      "notation": "standard",
      "originalId": "rowIndex",
      "sticky": "",
      "textColor": "#ffffff",
      "textSize": "1.25rem",
      "thousandSeparator": true,
      "validation": {},
      "verticalAlignment": "CENTER",
      "width": 150
    }
  },
  "renderMode": "CANVAS",
  "responsiveBehavior": "fill",
  "rightColumn": 64,
  "searchKey": "",
  "serverSidePaginationEnabled": false,
  "tableData": "{{\n  (GetAssociationsInfo.data || [])\n    .map(assoc => {\n      const events = (GetEvents.data || []).filter(e => e.AssociationsID === assoc.ID);\n      const activities = events.length;\n      const participants = events.reduce((sum, e) => sum + Number(e.Participants || 0), 0);\n      const points = (activities * 0.75) + (participants * 0.25);\n      return { ...assoc, Points: points };\n    })\n    .sort((a, b) => b.Points - a.Points) // sort before display\n}}\n",
  "textColor": "#ffffff",
  "textSize": "1.25rem",
  "topRow": 110,
  "totalRecordsCount": 0,
  "type": "TABLE_WIDGET_V2",
  "variant": "DEFAULT",
  "version": 2,
  "verticalAlignment": "CENTER",
  "widgetId": "uy2zog02ep",
  "widgetName": "RANKING_Table"
}